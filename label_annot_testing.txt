Return to this after implementing patterns
Label

1. SAME
(
    Annot
        (Step 1)
        (
            Annot
                (Step 0)
                (Annot
                    (Term
                        (
                            (has_cursor false)
                            (shape(Operand(err NotInHole)))
                            (sort Typ)
                        )
                    )
                    (Annot
                        (Token
                            (shape(Delim 0))
                            (len 1)
                            (has_cursor())
                        )
                        (Text .)
                    )
                )
        )
)

2. 
(
    Annot
        (Step 0)
        (
            Annot
                (
                    Term(
                        (has_cursor false)
                        (shape(Operand(err NotInHole)))
                        (sort Typ)
                    )
                )
                (
                    Annot
                        (Token
                            (shape(Delim 0))
                            (len 1)
                            (has_cursor()) //diff
                        )
                        (Text .)
                )
        )
)

3. 
(
    Annot
        ( //annot in UHLayout.find_and_decorate_Annot
            Term
                (
                    (has_cursor false)
                    (shape(Operand(err NotInHole)))
                    (sort Typ)
                
                )
        )
        ( // l1 in UHLayout.find_and_decorate_Annot
            Annot
                (
                    Token(shape(Delim 0))
                    (len 1)
                    (has_cursor())
                )
                (Text .)
        )
)

Annot Skip

(
    Annot 
        (Term(
            (has_cursor false)
            (shape(Operand(err NotInHole)))
            (sort Typ)
            )
        ) 
        (Annot
            (Token
                (shape(Delim 0))
                (len 1)
                (has_cursor())
            )
            (Text .)
        )
)

(
    Annot
        (Token(shape(Delim 0))(len 1)(has_cursor())) 
        (Text .)    
)

Annot Stop



Int
1. SAME
(
    Annot
        (Step 1)
        (
            Annot
                (Step 0)
                (
                    Annot
                        (
                            Term
                                (
                                    (has_cursor false)
                                    (shape(Operand(err NotInHole)))
                                    (sort Typ)
                                )
                        )
                        (Annot
                            (Token
                                (shape(Delim 0))
                                (len 3)
                                (has_cursor(3))
                            )
                            (Text Int)
                        )
                )
        )
)

2. 
(
    Annot
        (Step 0)
        (
            Annot
                (Term
                    (
                        (has_cursor false)
                        (shape(Operand(err NotInHole)))
                        (sort Typ)
                    )
                )
                (
                    Annot
                        (
                            Token
                                (shape(Delim 0))
                                (len 3)
                                (has_cursor(3)) // diff
                        )
                        (Text Int)
                )
        )
)

3. SAME
(
    Annot
        ( // annot
            Term
            (
                (has_cursor false)
                (shape(Operand(err NotInHole)))
                (sort Typ)
            )
        )
        ( // l1   
            Annot
                (
                    Token
                        (shape(Delim 0))
                        (len 3)
                        (has_cursor(3))
                )
                (Text Int)
        )
)

Annot Return



(
    Annot
        (Term((has_cursor false)(shape(Operand(err NotInHole)))(sort Typ))) // annot
        (
            Annot
                (Token
                    (shape(Delim 0))
                    (len 1)
                    (has_cursor())
                )
                (Text .)
        ) // l1
)



// Try again
Int
l values for find_and_decorate_Annot
(
    Annot
        (Step 1) // annot
        ( //l1
            Annot
                (Step 0)
                (
                    Annot
                        (Term((has_cursor false)(shape(Operand(err NotInHole)))(sort Typ)))
                        (Annot(Token(shape(Delim 0))(len 3)(has_cursor(3)))(Text Int))
                )
        )
)

(
    Annot
        (Step 0) // annot
        ( // l1
            Annot
                (Term((has_cursor false)(shape(Operand(err NotInHole)))(sort Typ)))
                (Annot(Token(shape(Delim 0))(len 3)(has_cursor(3)))(Text Int))
        )
)

(
    Annot
        (Term
            ((has_cursor false)(shape(Operand(err NotInHole)))(sort Typ))
        )
        (Annot
            (Token(shape(Delim 0))(len 3)(has_cursor(3)))
            (Text Int)
        )
)
// This is returned

// TODO: get this output for "."

(
    Annot
        (Term
            ((has_cursor false)(shape(Operand(err NotInHole)))(sort Typ))
        )
        (Annot
            (Token(shape(Delim 0))(len 1)(has_cursor()))
            (Text .)
        )
)

// This is skipped